name: immich
services:
  immich:
    container_name: immich
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE_NAME: immich
    image: ghcr.io/immich-app/immich-server:v1.111.0
    deploy:
      resources:
        reservations:
          memory: 512M
    volumes:
      - /zettos/pool/1/virtual_machine/docker/DATA/installed/Immich:/data
    ports:
      - 2283:3001
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.111.0-armnn
    deploy:
      resources:
        reservations:
          memory: 256M
    volumes:
      - model-cache:/cache
    restart: always

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:e3b17ba9479deec4b7d1eeec1548a253acc5374d68d3b27937fcfe4df8d18c7e
    deploy:
      resources:
        reservations:
          memory: 32M
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    deploy:
      resources:
        reservations:
          memory: 128M
    healthcheck:
      test: pg_isready --dbname=immich --username=postgres || exit 1; Chksum=$(psql --dbname=immich --username=postgres --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database'); echo "checksum failure count is \\\$Chksum"; [ "\\\$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: always

volumes:
  model-cache:

x-zettos:
  architectures:
    - amd64
    - arm64
  main: immich
  required_memory: 1024M
  author: ZettOS Team
  category: MultiMedia
  description:
    en_us: Immich is a self-hosted photo and video management application designed as an alternative to cloud-based services like Google Photos. It allows users to back up, organize, and share their media while maintaining control over their data privacy.
  developer: immich
  icon: Immich/icon.svg
  screenshot_link:
    - Immich/screenshot-1.png
    - Immich/screenshot-2.png
    - Immich/screenshot-3.png
  tagline:
    en_us: Self-hosted photo and video management solution
  thumbnail: Immich/thumbnail.png
  tips: {}
  title:
    en_us: Immich
  index: /
  port_map: "2283"
